kotlin version: 2.1.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: C:/Users/Elysa/Downloads/jungwon - with revisions and unlock/MyApplication/app/src/main/kotlin/com/example/myapplication/AudioRoom.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:55)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:42)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:28)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:192)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.runBackend(jvmCompilerPipeline.kt:80)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileModule(jvmCompilerPipelineLightTree.kt:264)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileSingleModuleUsingFrontendIrAndLightTree(jvmCompilerPipelineLightTree.kt:231)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipelineLightTree.kt:86)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:146)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:102)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:316)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:674)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:91)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1659)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:AudioRoom visibility:public modality:FINAL <> ($this:com.example.myapplication.AudioRoom, call:io.getstream.video.android.core.Call) returnType:kotlin.Unit
  annotations:
    Composable
  $this: VALUE_PARAMETER name:<this> type:com.example.myapplication.AudioRoom
  VALUE_PARAMETER name:call index:0 type:io.getstream.video.android.core.Call
  BLOCK_BODY
    VAR PROPERTY_DELEGATE name:custom$delegate type:androidx.compose.runtime.State<kotlin.collections.Map<kotlin.String, kotlin.Any?>> [val]
      TYPE_OP type=androidx.compose.runtime.State<kotlin.collections.Map<kotlin.String, kotlin.Any?>> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.State<kotlin.collections.Map<kotlin.String, kotlin.Any?>>
        CALL 'public final fun collectAsState$default <T> (context: kotlin.coroutines.CoroutineContext?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> declared in androidx.compose.runtime.SnapshotStateKt' type=androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> origin=DEFAULT_DISPATCH_CALL
          <T>: kotlin.collections.Map<kotlin.String, kotlin.Any?>
          $receiver: CALL 'public final fun <get-custom> (): kotlinx.coroutines.flow.StateFlow<kotlin.collections.Map<kotlin.String, kotlin.Any?>> declared in io.getstream.video.android.core.CallState' type=kotlinx.coroutines.flow.StateFlow<kotlin.collections.Map<kotlin.String, kotlin.Any?>> origin=GET_PROPERTY
            $this: CALL 'public final fun <get-state> (): io.getstream.video.android.core.CallState declared in io.getstream.video.android.core.Call' type=io.getstream.video.android.core.CallState origin=GET_PROPERTY
              $this: GET_VAR 'call: io.getstream.video.android.core.Call declared in com.example.myapplication.AudioRoom.AudioRoom' type=io.getstream.video.android.core.Call origin=null
          context: COMPOSITE type=kotlin.coroutines.CoroutineContext? origin=DEFAULT_VALUE
            CONST Null type=kotlin.coroutines.CoroutineContext? value=null
          $mask0: CONST Int type=kotlin.Int value=1
          $handler: CONST Null type=kotlin.Any? value=null
    VAR name:title type:kotlin.String? [val]
      BLOCK type=kotlin.String? origin=SAFE_CALL
        VAR IR_TEMPORARY_VARIABLE name:tmp0 type:kotlin.Any? [val]
          CALL 'public abstract fun get (key: K of kotlin.collections.Map): V of kotlin.collections.Map? [operator] declared in kotlin.collections.Map' type=kotlin.Any? origin=GET_ARRAY_ELEMENT
            $this: CALL 'private final fun AudioRoom$lambda$6 ($custom$delegate: androidx.compose.runtime.State<kotlin.collections.Map<kotlin.String, kotlin.Any?>>): kotlin.collections.Map<kotlin.String, kotlin.Any?> declared in com.example.myapplication.AudioRoom' type=kotlin.collections.Map<kotlin.String, kotlin.Any?> origin=GET_LOCAL_PROPERTY
              $custom$delegate: GET_VAR 'val custom$delegate: androidx.compose.runtime.State<kotlin.collections.Map<kotlin.String, kotlin.Any?>> [val] declared in com.example.myapplication.AudioRoom.AudioRoom' type=androidx.compose.runtime.State<kotlin.collections.Map<kotlin.String, kotlin.Any?>> origin=null
            key: CONST String type=kotlin.String value="title"
        WHEN type=kotlin.String? origin=null
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=INSTANCEOF typeOperand=kotlin.String
              GET_VAR 'val tmp0: kotlin.Any? [val] declared in com.example.myapplication.AudioRoom.AudioRoom' type=kotlin.Any? origin=null
            then: GET_VAR 'val tmp0: kotlin.Any? [val] declared in com.example.myapplication.AudioRoom.AudioRoom' type=kotlin.Any? origin=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CONST Null type=kotlin.String? value=null
    VAR name:description type:kotlin.String? [val]
      BLOCK type=kotlin.String? origin=SAFE_CALL
        VAR IR_TEMPORARY_VARIABLE name:tmp1 type:kotlin.Any? [val]
          CALL 'public abstract fun get (key: K of kotlin.collections.Map): V of kotlin.collections.Map? [operator] declared in kotlin.collections.Map' type=kotlin.Any? origin=GET_ARRAY_ELEMENT
            $this: CALL 'private final fun AudioRoom$lambda$6 ($custom$delegate: androidx.compose.runtime.State<kotlin.collections.Map<kotlin.String, kotlin.Any?>>): kotlin.collections.Map<kotlin.String, kotlin.Any?> declared in com.example.myapplication.AudioRoom' type=kotlin.collections.Map<kotlin.String, kotlin.Any?> origin=GET_LOCAL_PROPERTY
              $custom$delegate: GET_VAR 'val custom$delegate: androidx.compose.runtime.State<kotlin.collections.Map<kotlin.String, kotlin.Any?>> [val] declared in com.example.myapplication.AudioRoom.AudioRoom' type=androidx.compose.runtime.State<kotlin.collections.Map<kotlin.String, kotlin.Any?>> origin=null
            key: CONST String type=kotlin.String value="description"
        WHEN type=kotlin.String? origin=null
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=INSTANCEOF typeOperand=kotlin.String
              GET_VAR 'val tmp1: kotlin.Any? [val] declared in com.example.myapplication.AudioRoom.AudioRoom' type=kotlin.Any? origin=null
            then: GET_VAR 'val tmp1: kotlin.Any? [val] declared in com.example.myapplication.AudioRoom.AudioRoom' type=kotlin.Any? origin=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CONST Null type=kotlin.String? value=null
    VAR PROPERTY_DELEGATE name:participants$delegate type:androidx.compose.runtime.State<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>> [val]
      TYPE_OP type=androidx.compose.runtime.State<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.State<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>>
        CALL 'public final fun collectAsState$default <T> (context: kotlin.coroutines.CoroutineContext?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> declared in androidx.compose.runtime.SnapshotStateKt' type=androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> origin=DEFAULT_DISPATCH_CALL
          <T>: kotlin.collections.List<io.getstream.video.android.core.ParticipantState>
          $receiver: CALL 'public final fun <get-participants> (): kotlinx.coroutines.flow.StateFlow<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>> declared in io.getstream.video.android.core.CallState' type=kotlinx.coroutines.flow.StateFlow<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>> origin=GET_PROPERTY
            $this: CALL 'public final fun <get-state> (): io.getstream.video.android.core.CallState declared in io.getstream.video.android.core.Call' type=io.getstream.video.android.core.CallState origin=GET_PROPERTY
              $this: GET_VAR 'call: io.getstream.video.android.core.Call declared in com.example.myapplication.AudioRoom.AudioRoom' type=io.getstream.video.android.core.Call origin=null
          context: COMPOSITE type=kotlin.coroutines.CoroutineContext? origin=DEFAULT_VALUE
            CONST Null type=kotlin.coroutines.CoroutineContext? value=null
          $mask0: CONST Int type=kotlin.Int value=1
          $handler: CONST Null type=kotlin.Any? value=null
    VAR PROPERTY_DELEGATE name:activeSpeakers$delegate type:androidx.compose.runtime.State<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>> [val]
      TYPE_OP type=androidx.compose.runtime.State<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.State<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>>
        CALL 'public final fun collectAsState$default <T> (context: kotlin.coroutines.CoroutineContext?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> declared in androidx.compose.runtime.SnapshotStateKt' type=androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> origin=DEFAULT_DISPATCH_CALL
          <T>: kotlin.collections.List<io.getstream.video.android.core.ParticipantState>
          $receiver: CALL 'public final fun <get-activeSpeakers> (): kotlinx.coroutines.flow.StateFlow<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>> declared in io.getstream.video.android.core.CallState' type=kotlinx.coroutines.flow.StateFlow<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>> origin=GET_PROPERTY
            $this: CALL 'public final fun <get-state> (): io.getstream.video.android.core.CallState declared in io.getstream.video.android.core.Call' type=io.getstream.video.android.core.CallState origin=GET_PROPERTY
              $this: GET_VAR 'call: io.getstream.video.android.core.Call declared in com.example.myapplication.AudioRoom.AudioRoom' type=io.getstream.video.android.core.Call origin=null
          context: COMPOSITE type=kotlin.coroutines.CoroutineContext? origin=DEFAULT_VALUE
            CONST Null type=kotlin.coroutines.CoroutineContext? value=null
          $mask0: CONST Int type=kotlin.Int value=1
          $handler: CONST Null type=kotlin.Any? value=null
    VAR name:activeSpeaker type:io.getstream.video.android.core.ParticipantState? [val]
      CALL 'public final fun firstOrNull <T> (): T of kotlin.collections.CollectionsKt.firstOrNull? declared in kotlin.collections.CollectionsKt' type=io.getstream.video.android.core.ParticipantState? origin=null
        <T>: io.getstream.video.android.core.ParticipantState
        $receiver: CALL 'private final fun AudioRoom$lambda$8 ($activeSpeakers$delegate: androidx.compose.runtime.State<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>>): kotlin.collections.List<io.getstream.video.android.core.ParticipantState> declared in com.example.myapplication.AudioRoom' type=kotlin.collections.List<io.getstream.video.android.core.ParticipantState> origin=GET_LOCAL_PROPERTY
          $activeSpeakers$delegate: GET_VAR 'val activeSpeakers$delegate: androidx.compose.runtime.State<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>> [val] declared in com.example.myapplication.AudioRoom.AudioRoom' type=androidx.compose.runtime.State<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>> origin=null
    VAR PROPERTY_DELEGATE name:backstage$delegate type:androidx.compose.runtime.State<kotlin.Boolean> [val]
      TYPE_OP type=androidx.compose.runtime.State<kotlin.Boolean> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.State<kotlin.Boolean>
        CALL 'public final fun collectAsState$default <T> (context: kotlin.coroutines.CoroutineContext?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> declared in androidx.compose.runtime.SnapshotStateKt' type=androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> origin=DEFAULT_DISPATCH_CALL
          <T>: kotlin.Boolean
          $receiver: CALL 'public final fun <get-backstage> (): kotlinx.coroutines.flow.StateFlow<kotlin.Boolean> declared in io.getstream.video.android.core.CallState' type=kotlinx.coroutines.flow.StateFlow<kotlin.Boolean> origin=GET_PROPERTY
            $this: CALL 'public final fun <get-state> (): io.getstream.video.android.core.CallState declared in io.getstream.video.android.core.Call' type=io.getstream.video.android.core.CallState origin=GET_PROPERTY
              $this: GET_VAR 'call: io.getstream.video.android.core.Call declared in com.example.myapplication.AudioRoom.AudioRoom' type=io.getstream.video.android.core.Call origin=null
          context: COMPOSITE type=kotlin.coroutines.CoroutineContext? origin=DEFAULT_VALUE
            CONST Null type=kotlin.coroutines.CoroutineContext? value=null
          $mask0: CONST Int type=kotlin.Int value=1
          $handler: CONST Null type=kotlin.Any? value=null
    VAR PROPERTY_DELEGATE name:isMicrophoneEnabled$delegate type:androidx.compose.runtime.State<kotlin.Boolean> [val]
      TYPE_OP type=androidx.compose.runtime.State<kotlin.Boolean> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.State<kotlin.Boolean>
        CALL 'public final fun collectAsState$default <T> (context: kotlin.coroutines.CoroutineContext?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> declared in androidx.compose.runtime.SnapshotStateKt' type=androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> origin=DEFAULT_DISPATCH_CALL
          <T>: kotlin.Boolean
          $receiver: CALL 'public final fun <get-isEnabled> (): kotlinx.coroutines.flow.StateFlow<kotlin.Boolean> declared in io.getstream.video.android.core.MicrophoneManager' type=kotlinx.coroutines.flow.StateFlow<kotlin.Boolean> origin=GET_PROPERTY
            $this: CALL 'public final fun <get-microphone> (): io.getstream.video.android.core.MicrophoneManager declared in io.getstream.video.android.core.Call' type=io.getstream.video.android.core.MicrophoneManager origin=GET_PROPERTY
              $this: GET_VAR 'call: io.getstream.video.android.core.Call declared in com.example.myapplication.AudioRoom.AudioRoom' type=io.getstream.video.android.core.Call origin=null
          context: COMPOSITE type=kotlin.coroutines.CoroutineContext? origin=DEFAULT_VALUE
            CONST Null type=kotlin.coroutines.CoroutineContext? value=null
          $mask0: CONST Int type=kotlin.Int value=1
          $handler: CONST Null type=kotlin.Any? value=null
    CALL 'public final fun Description (title: kotlin.String?, description: kotlin.String?, participants: kotlin.collections.List<io.getstream.video.android.core.ParticipantState>): kotlin.Unit declared in com.example.myapplication.AudioRoom' type=kotlin.Unit origin=null
      $this: GET_VAR '<this>: com.example.myapplication.AudioRoom declared in com.example.myapplication.AudioRoom.AudioRoom' type=com.example.myapplication.AudioRoom origin=null
      title: GET_VAR 'val title: kotlin.String? [val] declared in com.example.myapplication.AudioRoom.AudioRoom' type=kotlin.String? origin=null
      description: GET_VAR 'val description: kotlin.String? [val] declared in com.example.myapplication.AudioRoom.AudioRoom' type=kotlin.String? origin=null
      participants: CALL 'private final fun AudioRoom$lambda$7 ($participants$delegate: androidx.compose.runtime.State<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>>): kotlin.collections.List<io.getstream.video.android.core.ParticipantState> declared in com.example.myapplication.AudioRoom' type=kotlin.collections.List<io.getstream.video.android.core.ParticipantState> origin=GET_LOCAL_PROPERTY
        $participants$delegate: GET_VAR 'val participants$delegate: androidx.compose.runtime.State<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>> [val] declared in com.example.myapplication.AudioRoom.AudioRoom' type=androidx.compose.runtime.State<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>> origin=null
    COMPOSITE type=kotlin.Unit origin=null
      BLOCK type=kotlin.Unit? origin=FOLDED_SAFE_CALL
        WHEN type=kotlin.Unit? origin=FOLDED_SAFE_CALL
          BRANCH
            if: COMPOSITE type=kotlin.Boolean origin=null
              CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                  arg0: GET_VAR 'val activeSpeaker: io.getstream.video.android.core.ParticipantState? [val] declared in com.example.myapplication.AudioRoom.AudioRoom' type=io.getstream.video.android.core.ParticipantState? origin=null
                  arg1: CONST Null type=kotlin.Nothing? value=null
            then: CALL 'public final fun let <T, R> (block: kotlin.Function1<T of kotlin.StandardKt.let, R of kotlin.StandardKt.let>): R of kotlin.StandardKt.let [inline] declared in kotlin.StandardKt' type=kotlin.Unit origin=null
              <T>: io.getstream.video.android.core.ParticipantState
              <R>: kotlin.Unit
              $receiver: GET_VAR 'val activeSpeaker: io.getstream.video.android.core.ParticipantState? [val] declared in com.example.myapplication.AudioRoom.AudioRoom' type=io.getstream.video.android.core.ParticipantState? origin=null
              block: BLOCK type=kotlin.Function1<io.getstream.video.android.core.ParticipantState, kotlin.Unit> origin=LAMBDA
                COMPOSITE type=kotlin.Unit origin=null
                FUNCTION_REFERENCE 'private final fun AudioRoom$lambda$11 (it: io.getstream.video.android.core.ParticipantState): kotlin.Unit declared in com.example.myapplication.AudioRoom' type=kotlin.Function1<io.getstream.video.android.core.ParticipantState, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CONST Null type=kotlin.Nothing? value=null
    CALL 'public final fun Column$default (modifier: androidx.compose.ui.Modifier?, verticalArrangement: androidx.compose.foundation.layout.Arrangement.Vertical?, horizontalAlignment: androidx.compose.ui.Alignment.Horizontal?, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.ColumnKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      modifier: CALL 'public final fun padding-qDBjuR0$default (start: androidx.compose.ui.unit.Dp, top: androidx.compose.ui.unit.Dp, end: androidx.compose.ui.unit.Dp, bottom: androidx.compose.ui.unit.Dp, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.PaddingKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
        $receiver: CALL 'public final fun fillMaxHeight$default (fraction: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
          $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
          fraction: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
            CONST Float type=kotlin.Float value=0.0
          $mask0: CONST Int type=kotlin.Int value=1
          $handler: CONST Null type=kotlin.Any? value=null
        start: COMPOSITE type=androidx.compose.ui.unit.Dp origin=DEFAULT_VALUE
          CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.Dp origin=null
            <T>: kotlin.Float
            <R>: androidx.compose.ui.unit.Dp
            v: CONST Float type=kotlin.Float value=0.0
        top: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
          $receiver: CONST Int type=kotlin.Int value=32
        end: COMPOSITE type=androidx.compose.ui.unit.Dp origin=DEFAULT_VALUE
          CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.Dp origin=null
            <T>: kotlin.Float
            <R>: androidx.compose.ui.unit.Dp
            v: CONST Float type=kotlin.Float value=0.0
        bottom: COMPOSITE type=androidx.compose.ui.unit.Dp origin=DEFAULT_VALUE
          CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.Dp origin=null
            <T>: kotlin.Float
            <R>: androidx.compose.ui.unit.Dp
            v: CONST Float type=kotlin.Float value=0.0
        $mask0: CONST Int type=kotlin.Int value=13
        $handler: CONST Null type=kotlin.Any? value=null
      verticalArrangement: COMPOSITE type=androidx.compose.foundation.layout.Arrangement.Vertical? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.foundation.layout.Arrangement.Vertical? value=null
      horizontalAlignment: COMPOSITE type=androidx.compose.ui.Alignment.Horizontal? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.Alignment.Horizontal? value=null
      content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        FUNCTION_REFERENCE 'private final fun AudioRoom$lambda$13 (this$0: com.example.myapplication.AudioRoom, $call: io.getstream.video.android.core.Call, $participants$delegate: androidx.compose.runtime.State<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>>, $isMicrophoneEnabled$delegate: androidx.compose.runtime.State<kotlin.Boolean>, $backstage$delegate: androidx.compose.runtime.State<kotlin.Boolean>): kotlin.Unit declared in com.example.myapplication.AudioRoom' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
          this$0: GET_VAR '<this>: com.example.myapplication.AudioRoom declared in com.example.myapplication.AudioRoom.AudioRoom' type=com.example.myapplication.AudioRoom origin=null
          $call: GET_VAR 'call: io.getstream.video.android.core.Call declared in com.example.myapplication.AudioRoom.AudioRoom' type=io.getstream.video.android.core.Call origin=null
          $participants$delegate: GET_VAR 'val participants$delegate: androidx.compose.runtime.State<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>> [val] declared in com.example.myapplication.AudioRoom.AudioRoom' type=androidx.compose.runtime.State<kotlin.collections.List<io.getstream.video.android.core.ParticipantState>> origin=null
          $isMicrophoneEnabled$delegate: GET_VAR 'val isMicrophoneEnabled$delegate: androidx.compose.runtime.State<kotlin.Boolean> [val] declared in com.example.myapplication.AudioRoom.AudioRoom' type=androidx.compose.runtime.State<kotlin.Boolean> origin=null
          $backstage$delegate: GET_VAR 'val backstage$delegate: androidx.compose.runtime.State<kotlin.Boolean> [val] declared in com.example.myapplication.AudioRoom.AudioRoom' type=androidx.compose.runtime.State<kotlin.Boolean> origin=null
      $mask0: CONST Int type=kotlin.Int value=6
      $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:41)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:407)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:424)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:52)
	... 45 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun Column$default (modifier: androidx.compose.ui.Modifier?, verticalArrangement: androidx.compose.foundation.layout.Arrangement.Vertical?, horizontalAlignment: androidx.compose.ui.Alignment.Horizontal?, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.ColumnKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:598)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:524)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:529)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:236)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:124)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:45)
	... 55 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/foundation/layout/ColumnKt;.Column$default(Landroidx/compose/ui/Modifier;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/ui/Alignment$Horizontal;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 67 more


